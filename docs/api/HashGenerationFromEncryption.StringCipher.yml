### YamlMime:ManagedReference
items:
- uid: HashGenerationFromEncryption.StringCipher
  commentId: T:HashGenerationFromEncryption.StringCipher
  id: StringCipher
  parent: HashGenerationFromEncryption
  children:
  - HashGenerationFromEncryption.StringCipher.Decrypt(System.String,System.String)
  - HashGenerationFromEncryption.StringCipher.Encrypt(System.String,System.String)
  langs:
  - csharp
  - vb
  name: StringCipher
  nameWithType: StringCipher
  fullName: HashGenerationFromEncryption.StringCipher
  type: Class
  source:
    remote:
      path: D:/docfx/docfx_project/src/StringCipher.cs
    id: StringCipher
    path: src/StringCipher.cs
    startLine: 9
  assemblies:
  - HashGenerationFromEncryption
  namespace: HashGenerationFromEncryption
  syntax:
    content: public static class StringCipher
    content.vb: Public Module StringCipher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: HashGenerationFromEncryption.StringCipher.Encrypt(System.String,System.String)
  commentId: M:HashGenerationFromEncryption.StringCipher.Encrypt(System.String,System.String)
  id: Encrypt(System.String,System.String)
  parent: HashGenerationFromEncryption.StringCipher
  langs:
  - csharp
  - vb
  name: Encrypt(String, String)
  nameWithType: StringCipher.Encrypt(String, String)
  fullName: HashGenerationFromEncryption.StringCipher.Encrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: D:/docfx/docfx_project/src/StringCipher.cs
    id: Encrypt
    path: src/StringCipher.cs
    startLine: 19
  assemblies:
  - HashGenerationFromEncryption
  namespace: HashGenerationFromEncryption
  syntax:
    content: public static string Encrypt(string plainText, string passPhrase)
    parameters:
    - id: plainText
      type: System.String
    - id: passPhrase
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Encrypt(plainText As String, passPhrase As String) As String
  overload: HashGenerationFromEncryption.StringCipher.Encrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: HashGenerationFromEncryption.StringCipher.Decrypt(System.String,System.String)
  commentId: M:HashGenerationFromEncryption.StringCipher.Decrypt(System.String,System.String)
  id: Decrypt(System.String,System.String)
  parent: HashGenerationFromEncryption.StringCipher
  langs:
  - csharp
  - vb
  name: Decrypt(String, String)
  nameWithType: StringCipher.Decrypt(String, String)
  fullName: HashGenerationFromEncryption.StringCipher.Decrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: D:/docfx/docfx_project/src/StringCipher.cs
    id: Decrypt
    path: src/StringCipher.cs
    startLine: 56
  assemblies:
  - HashGenerationFromEncryption
  namespace: HashGenerationFromEncryption
  syntax:
    content: public static string Decrypt(string cipherText, string passPhrase)
    parameters:
    - id: cipherText
      type: System.String
    - id: passPhrase
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Decrypt(cipherText As String, passPhrase As String) As String
  overload: HashGenerationFromEncryption.StringCipher.Decrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: HashGenerationFromEncryption
  commentId: N:HashGenerationFromEncryption
  name: HashGenerationFromEncryption
  nameWithType: HashGenerationFromEncryption
  fullName: HashGenerationFromEncryption
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HashGenerationFromEncryption.StringCipher.Encrypt*
  commentId: Overload:HashGenerationFromEncryption.StringCipher.Encrypt
  name: Encrypt
  nameWithType: StringCipher.Encrypt
  fullName: HashGenerationFromEncryption.StringCipher.Encrypt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: HashGenerationFromEncryption.StringCipher.Decrypt*
  commentId: Overload:HashGenerationFromEncryption.StringCipher.Decrypt
  name: Decrypt
  nameWithType: StringCipher.Decrypt
  fullName: HashGenerationFromEncryption.StringCipher.Decrypt
